Front end
  Ionic Framework
    The application is packaged as an Ionic 1 project, allowing for it to be exported to many different devices.
    Ionic is a free and open source software and has many useful options allowing us to create a user friendly GUI and then emulate it on all three of our targeted devices: internet browser, Android and IOS.
    We have originally planned to use Ionic 2 but after some issues decided to use the more tested first version.
    The other resources described in this section are mainly connected to this central framework.
    The combination of this native framework combined with the out of the box functionality allows for the design of superb, user friendly interfaces which provide a smooth experience for any user.
    Additional features such like the Ionic View application help to test it by allowing you to push your application to the cloud then download it straight to the mobile device where it can be tested.
    Ionic 1 is also closely tied to AngularJS which is one of the frameworks we have decided to use.


HTML language
  HTML is used as a part of the Ionic framework to design the backbone of the pages.<br> We use templating and Ionic to create versatile web pages.

AngularJS language
  This layer is used to control the behaviour of the web pages from the creation of the app all the way to the controllers and routes. It also calls on our hosted API, through HTTP requests to query the database for the required data.

Auth0 Framework
  We have configured a login as a service framework to handle the user sign in.
  This is a addon that we have applied on the Heroku side of the application giving us a huge amount of customisation options, such as user creation and editing, user location, a dedicated database for the users and much more.
  We only had a limited time to interact with and there is still a lot of options that have not been implemented in our application.


Middleware
  NodeJS language
   From our research Ionic cannot be connected directly to MongoDB and most people use SQL databases as their data layer.<br> We have decided to create a dedicated REST API server hosted on Heroku which can take in requests to the database through HTTP.


Back end
  Database
    MongoDB database
      This database has also been provisioned from Heroku, it stores user info and account data. It can be reached through the REST API we created.


  Hosting
    Heroku hosting
      Heroku hosts our REST API server and provisions and connects the Auth0 and MongoDB. It is connected to our REST API branch of the project, building and hosting the newest version whenever we push to the GIT repository.
    Auth0 hosting
      Auth0 provides its own database for the user login data as well as providing a interface for database modification.
    MongoDB hosting
      MongoDB provides its own limited (50 MB) sandbox server space for us to store our data on.


  Additional Resources
   Google Maps API
    Our app features a 'Location' page which utilises the Google Maps API on which we have marked the location of our bank.
